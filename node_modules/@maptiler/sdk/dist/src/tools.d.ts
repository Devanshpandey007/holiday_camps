import { RequestParameters, ResourceType, RequestTransformFunction } from 'maplibre-gl';

export declare function enableRTL(): void;
export declare function bindAll(fns: Array<string>, context: any): void;
export declare function DOMcreate<K extends keyof HTMLElementTagNameMap>(tagName: K, className?: string, container?: HTMLElement): HTMLElementTagNameMap[K];
export declare function DOMremove(node: HTMLElement): void;
/**
 * This function is meant to be used as transformRequest by any Map instance created.
 * It adds the session ID as well as the MapTiler Cloud key from the config to all the requests
 * performed on MapTiler Cloud servers.
 */
export declare function maptilerCloudTransformRequest(url: string, resourceType?: ResourceType): RequestParameters;
/**
 * This combines a user-defined tranformRequest function (optionnal)
 * with the MapTiler Cloud-specific one: maptilerCloudTransformRequest
 */
export declare function combineTransformRequest(userDefinedRTF?: RequestTransformFunction | null): RequestTransformFunction;
/**
 * Generate a random string. Handy to create random IDs
 */
export declare function generateRandomString(): string;
/**
 * Check if a given string is in a uuid format
 */
export declare function isUUID(s: string): boolean;
/**
 * Attempt a JSON parse of a string but does not throw if the string is not valid JSON, returns `null` instead.
 */
export declare function jsonParseNoThrow<T>(doc: string): T | null;
/**
 * Simple function to check if an object is a GeoJSON
 */
export declare function isValidGeoJSON<T>(obj: T & {
    type: string;
}): boolean;
/**
 * This function tests if WebGL2 is supported. Since it can be for a different reasons that WebGL2 is
 * not supported but we do not have an action to take based on the reason, this function return null
 * if there is no error (WebGL is supported), or returns a string with the error message if WebGL2 is
 * not supported.
 */
export declare function getWebGLSupportError(): string | null;
/**
 * Display an error message in the Map div if WebGL2 is not supported
 */
export declare function displayNoWebGlWarning(container: HTMLElement | string): void;
/**
 * Display an error message in the Map div if WebGL2 is not supported
 */
export declare function displayWebGLContextLostWarning(container: HTMLElement | string): void;
